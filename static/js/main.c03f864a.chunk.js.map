{"version":3,"sources":["components/AddCard/AddCard.jsx","components/Button/Button.jsx","components/AddCard/AddCardForm/AddCardForm.jsx","components/AddList/AddList.jsx","components/MenuCard/MenuCard.jsx","components/Card/Card.jsx","components/ListHeader/ListHeader.jsx","components/ChangeBackground/ChangeBackground.jsx","components/Todo/Todo.jsx","App.js","index.js"],"names":["AddCard","handleOpenAddCard","list","datas","isAddOpen","className","onClick","id","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","some","el","listID","Button","children","type","typeButton","classButton","btnCard","AddCardForm","handleAddData","inputRef","useRef","addRef","useState","input","setInput","handleClickOutside","event","current","contains","target","handleCloseCard","useEffect","focus","scrollIntoView","behavior","autosize","document","addEventListener","removeEventListener","ref","onSubmit","preventDefault","length","value","onChange","e","placeholder","AddList","lists","handleAddList","setIsAddOpen","autoComplete","MenuCard","handleMenuCard","currentList","isOpenMove","setIsOpenMove","d","filter","map","CSSTransition","in","appear","timeout","classNames","title","Card","data","handleEditData","modalRef","listRef","offsetTop","setOffsetTop","offsetLeft","setOffsetLeft","isEdit","setIsEdit","name","inputEdit","setInputEdit","select","style","top","left","ListHeader","handleEditList","handleDeleteAllData","handleDeleteList","formRef","headerRef","popRef","extraRef","isFocus","setIsFocus","isPop","setIsPop","handleAction","action","dispatchEvent","Event","cancelable","bubbles","blur","ChangeBackground","isChangeBg","setIsChangeBg","handleChange","backgroundColor","background","checked","Todo","setLists","setDatas","setBackgroundColor","newList","index","findIndex","tempArray","splice","JSON","parse","localStorage","getItem","window","handleResize","setItem","stringify","newData","task","forEach","handleDeleteData","isMobile","setIsMobile","innerWidth","href","rel","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c03f864a.chunk.js","sourcesContent":["import './AddCard.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCard({handleOpenAddCard, list, datas}) {\r\n  return (\r\n    <>\r\n    {!list.isAddOpen &&\r\n      <div className=\"todo__add\">\r\n        <div className=\"todo__add__open\" onClick={()=>handleOpenAddCard(list.id)}>\r\n          <svg className='plus__icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" >\r\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\r\n\r\n          {datas.some(el => el.listID === list.id) ? (\r\n            <span>Add another card</span>\r\n          ) : (\r\n            <span>Add a card</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n};\r\n\r\nAddCard.propTypes = {\r\n  list: PropTypes.object,\r\n  datas: PropTypes.array,\r\n  handleOpenAddCard: PropTypes.func,\r\n};\r\n\r\nexport default AddCard;","import \"./Button.scss\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ children, type, btnCard }) {\r\n  const typeButton = type ? type : \"button\";\r\n  const classButton = btnCard ? \"btn--primary btn--card\" : \"btn--primary\";\r\n  return (\r\n    <button type={typeButton} className={classButton}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.string,\r\n  type: PropTypes.string,\r\n  btnCard: PropTypes.bool,\r\n};\r\n\r\nexport default Button;","import { useEffect, useRef, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport autosize from 'autosize';\r\nimport Button from '../../Button';\r\nimport './AddCardForm.scss';\r\n\r\nfunction AddCardForm({handleAddData, list, handleOpenAddCard}) {\r\n  const inputRef = useRef(null);\r\n  const addRef = useRef(null);\r\n  const [input, setInput] = useState('');\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (!input.length) {\r\n      return;\r\n    }\r\n    handleAddData(input, list.id);\r\n    setInput('');\r\n    inputRef.current.focus();\r\n  }\r\n\r\n  function handleClickOutside(event) {\r\n    if (addRef.current && !addRef.current.contains(event.target)) {\r\n      handleCloseCard();\r\n    }\r\n  }\r\n  function handleCloseCard(){\r\n    setInput('');\r\n    handleOpenAddCard(list.id);\r\n  }\r\n  // function handlePressEnter(event) {\r\n  //   if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n  //     handleSubmit(event);\r\n  //   }\r\n  // }\r\n  \r\n  useEffect(() => {\r\n    if (list.isAddOpen) {\r\n      inputRef.current.focus();\r\n      addRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      autosize(inputRef.current);\r\n\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      // document.addEventListener(\"keydown\", handlePressEnter);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        // document.removeEventListener(\"keydown\", handlePressEnter);\r\n      }\r\n    }\r\n  }, [list.isAddOpen]);\r\n\r\n  return (\r\n    <>\r\n      {list.isAddOpen && (\r\n        <>\r\n          <form className=\"todo__add__form\" ref={addRef} onSubmit={handleSubmit}>\r\n            <textarea\r\n              className='item__edit__input'\r\n              ref={inputRef}\r\n              value={input}\r\n              onChange={(e)=>setInput(e.target.value)}\r\n              placeholder='Enter a title for this card...'\r\n            />\r\n            <div className='add__button'>\r\n              <Button type='submit' btnCard>Add Card</Button>\r\n              <button type='button' className='add__button--close' onClick={handleCloseCard}>\r\n                <svg className='close__icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nAddCardForm.propTypes = {\r\n  handleAddData: PropTypes.func,\r\n  handleOpenAddCard: PropTypes.func,\r\n  list: PropTypes.object\r\n}\r\n\r\nexport default AddCardForm\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport './AddList.scss'\r\nimport autosize from 'autosize';\r\nimport Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddList({lists, handleAddList}) {\r\n  const inputRef = useRef(null);\r\n  const addRef = useRef(null);\r\n\r\n  const [isAddOpen, setIsAddOpen] = useState(false);\r\n  const [input, setInput] = useState('');\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (!input.length) {\r\n      return;\r\n    }\r\n    handleAddList(input);\r\n    setInput('');\r\n    setIsAddOpen(false);\r\n  }\r\n\r\n  function handleClickOutside(event) {\r\n    if (addRef.current && !addRef.current.contains(event.target)) {\r\n      handleCloseCard()\r\n    }\r\n  }\r\n  function handleCloseCard() {\r\n    setInput('');\r\n    setIsAddOpen(false);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (isAddOpen) {\r\n      inputRef.current.focus();\r\n      autosize(inputRef.current);\r\n\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      }\r\n    }\r\n  }, [isAddOpen]);\r\n\r\n  return (\r\n    <div className={isAddOpen ? 'todo__add-list--open': 'todo__add-list'} ref={addRef}>\r\n      {isAddOpen ? (\r\n        <>\r\n          <form className=\"add-list__form\" onSubmit={handleSubmit}>\r\n            <input\r\n              className='add-list__input'\r\n              ref={inputRef}\r\n              value={input}\r\n              onChange={(e)=>setInput(e.target.value)}\r\n              placeholder='Enter list title...'\r\n              autoComplete='off'\r\n            />\r\n            <div className='add__button'>\r\n              <Button type='submit' btnCard>Add List</Button>\r\n              <button type='button' className='add__button--close' onClick={handleCloseCard}>\r\n                <svg className='close__icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n        ) : (\r\n        <>\r\n          <div className=\"add-list__open\" onClick={()=>setIsAddOpen(true)}>\r\n            <svg className='plus__icon--white' xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" >\r\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n            </svg>\r\n\r\n            {lists.length ? (\r\n              <span>Add another list</span>\r\n            ) : (\r\n              <span>Add a list</span>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nAddList.propTypes = {\r\n  lists: PropTypes.array,\r\n  handleAddList: PropTypes.func,\r\n};\r\n\r\nexport default AddList\r\n","import PropTypes from 'prop-types';\r\nimport './MenuCard.scss';\r\nimport { useState } from 'react';\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction MenuCard({lists, handleMenuCard, currentList}) {\r\n  const [isOpenMove, setIsOpenMove] = useState(false);\r\n\r\n  return (\r\n    <div className=\"menu-list\">\r\n      \r\n      <div className='menu-list__item' onClick={()=>setIsOpenMove(!isOpenMove)}>\r\n        <span className='menu-list__icon-wrapper'>\r\n          <svg className='menu-list__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M16.172 11l-5.364-5.364 1.414-1.414L20 12l-7.778 7.778-1.414-1.414L16.172 13H4v-2z\"/></svg>\r\n        </span>\r\n        <span>Move</span>\r\n      </div>\r\n\r\n      {isOpenMove && (\r\n        <>\r\n          {lists.filter(el => el.id !== currentList).map(list => (\r\n            <CSSTransition\r\n              key={list.id}\r\n              in={isOpenMove}\r\n              appear={true}\r\n              timeout={300}\r\n              classNames=\"menu-fade\"\r\n            >\r\n              <div key={list.id} className='menu-list__item--move' onClick={()=>handleMenuCard(list.id)}>\r\n                {list.title}\r\n              </div>\r\n            </CSSTransition>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      <div className='menu-list__item' onClick={()=>handleMenuCard('delete')}>\r\n        <span className='menu-list__icon-wrapper'>\r\n          <svg className='menu-list__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M3 10H2V4.003C2 3.449 2.455 3 2.992 3h18.016A.99.99 0 0 1 22 4.003V10h-1v10.001a.996.996 0 0 1-.993.999H3.993A.996.996 0 0 1 3 20.001V10zm16 0H5v9h14v-9zM4 5v3h16V5H4zm5 7h6v2H9v-2z\"/></svg>\r\n        </span>\r\n        <span>Archive</span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nMenuCard.propTypes = {\r\n  lists: PropTypes.array,\r\n  handleMenuCard: PropTypes.func,\r\n  currentList: PropTypes.number\r\n}\r\n\r\nexport default MenuCard\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport autosize from \"autosize\";\r\nimport MenuCard from \"../MenuCard\";\r\nimport Button from \"../Button\";\r\nimport './Card.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Card({ data, lists, handleMenuCard, handleEditData }) {\r\n  const inputRef = useRef(null);\r\n  const modalRef = useRef(null);\r\n  const listRef = useRef(null);\r\n\r\n  const [offsetTop, setOffsetTop] = useState(0);\r\n  const [offsetLeft, setOffsetLeft] = useState(0);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [inputEdit, setInputEdit] = useState(data.name);\r\n\r\n  useEffect(() => {\r\n    setOffsetTop(listRef.current.offsetTop);\r\n    setOffsetLeft(listRef.current.offsetLeft);\r\n  });\r\n\r\n\r\n  const handleSubmitEdit = () => {\r\n    handleEditData(data.id, inputEdit);\r\n    setIsEdit(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      inputRef.current.focus();\r\n      inputRef.current.select();\r\n      autosize(inputRef.current);\r\n\r\n      function handleClickOutside(event) {\r\n        if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n          setIsEdit(false);\r\n          setInputEdit(data.name);\r\n        }\r\n      }\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }\r\n  }, [isEdit]);\r\n\r\n  return (\r\n    <>\r\n      <li className=\"todo__item\" ref={listRef} onClick={() => {setIsEdit(true);}}>\r\n        <div className=\"item__main\">\r\n          <div className=\"item__task\">{data.name}</div>\r\n        </div>\r\n        {isEdit && (\r\n          <div className=\"item__edit\">\r\n            <form\r\n              className=\"item__edit__card\"\r\n              onSubmit={() => handleSubmitEdit()}\r\n              ref={modalRef}\r\n              style={{ top: `${offsetTop}px`, left: `${offsetLeft}px` }}\r\n            >\r\n              <textarea\r\n                className=\"item__edit__input\"\r\n                ref={inputRef}\r\n                value={inputEdit}\r\n                onChange={(e) => setInputEdit(e.target.value)}\r\n              />\r\n\r\n              <CSSTransition\r\n                in={isEdit}\r\n                appear={true}\r\n                timeout={200}\r\n                classNames=\"fade\"\r\n              >\r\n                <MenuCard lists={lists} handleMenuCard={handleMenuCard} currentList={data.listID} />\r\n              </CSSTransition>\r\n\r\n              <div>\r\n                <Button type='submit'>Save</Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  data: PropTypes.object,\r\n  lists: PropTypes.array,\r\n  handleMenuCard: PropTypes.func,\r\n  handleEditData: PropTypes.func,\r\n};\r\n\r\nexport default Card;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './ListHeader.scss';\r\n\r\nfunction ListHeader({list, handleEditList, handleOpenAddCard, handleDeleteAllData, handleDeleteList}) {\r\n  const formRef = useRef();\r\n  const inputRef = useRef();\r\n  const headerRef = useRef();\r\n  const popRef = useRef();\r\n  const extraRef = useRef();\r\n\r\n  const [input, setInput] = useState(list.title);\r\n  const [isFocus, setIsFocus] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n\r\n  const submitTest = (event) => {\r\n    event.preventDefault();\r\n    handleEditList(list.id, input);\r\n    inputRef.current.blur();\r\n  }\r\n\r\n  function handleAction(action) {\r\n    setIsPop(false);\r\n\r\n    switch (action) {\r\n      case 'add_card':\r\n        handleOpenAddCard(list.id);\r\n        break;    \r\n      case 'delete_all_card':\r\n        handleDeleteAllData(list.id);\r\n        break;    \r\n      default:\r\n        handleDeleteList(list.id);\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setInput(list.title);\r\n  }, [list])\r\n\r\n  useEffect(() => {\r\n    if (isFocus) {\r\n      function handleClickOutside(event) {\r\n        if (formRef.current && !formRef.current.contains(event.target)) {\r\n          // Untuk submit form melalui useRef\r\n          formRef.current.dispatchEvent(new Event('submit', { cancelable: true, bubbles: true }));\r\n          setIsFocus(false);\r\n        }\r\n      }\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      }\r\n    }\r\n  }, [isFocus])\r\n\r\n  useEffect(() => {\r\n    if (isPop) {\r\n      function handleClickOutside(event) {\r\n        if ((popRef.current && !popRef.current.contains(event.target)) && (extraRef.current && !extraRef.current.contains(event.target))) {\r\n          setIsPop(false);\r\n        }\r\n      }\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      }\r\n    }\r\n  }, [isPop]);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"list-header\" ref={headerRef}>\r\n      <form className='list-header__form' ref={formRef} onClick={()=>setIsFocus(true)} onSubmit={submitTest}>\r\n        <input\r\n          className='list-header__input'\r\n          value={input}\r\n          ref={inputRef}\r\n          onChange={(e)=>setInput(e.target.value)}\r\n          autoComplete='off'\r\n        />\r\n      </form>\r\n      <button type='button' className=\"list-header__extra\" ref={extraRef} onClick={()=>setIsPop(!isPop)}>\r\n        <svg className='list-header__extra__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M5 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm14 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-7 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n      </button>\r\n\r\n      {isPop && (\r\n        <div className=\"pop-over\" ref={popRef}>\r\n          <div className=\"pop-over__header\">\r\n            <span className=\"pop-over__header__title\">List actions</span>\r\n            <button type='button' className='pop-over__header__close' onClick={()=>setIsPop(false)}>\r\n              <svg className='close__icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div className=\"pop-over__content\">\r\n            <ul className=\"pop-over__list\">\r\n              <li>\r\n                <button className='pop-over__item' onClick={()=>handleAction('add_card')}>\r\n                  Add card...\r\n                </button>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"pop-over__list\">\r\n              <li>\r\n                <button className='pop-over__item' onClick={()=>handleAction('delete_all_card')}>\r\n                  Archive all cards in this list...\r\n                </button>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"pop-over__list\">\r\n              <li>\r\n                <button className='pop-over__item' onClick={()=>handleAction('delete_list')}>\r\n                  Archive this list\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nListHeader.propTypes = {\r\n  list: PropTypes.object,\r\n  handleEditList: PropTypes.func,\r\n  handleOpenAddCard: PropTypes.func,\r\n  handleDeleteAllData: PropTypes.func,\r\n  handleDeleteList: PropTypes.func\r\n}\r\n\r\nexport default ListHeader","import \"./ChangeBackground.scss\";\r\n\r\nfunction ChangeBackground({ isChangeBg, setIsChangeBg, handleChange, backgroundColor }) {\r\n  const listBackground = [\r\n    \"blue\",\r\n    \"orange\",\r\n    \"green\",\r\n    \"red\",\r\n    \"purple\",\r\n    \"pink\",\r\n    \"green-light\",\r\n    \"blue-light\",\r\n    \"gray\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {isChangeBg && (\r\n        <div className=\"change-bg\">\r\n          <div className=\"change-bg__header\">\r\n            <span className=\"change-bg__title\">Colors</span>\r\n            <button\r\n              type=\"button\"\r\n              className=\"change-bg__close\"\r\n              onClick={() => setIsChangeBg(false)}\r\n            >\r\n              <svg\r\n                className=\"close__icon\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div className=\"change-bg__content\">\r\n            {listBackground.map((background, id) => (\r\n              <div className=\"change-bg__wrapper\" key={id}>\r\n                <label className=\"container\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"background\"\r\n                    value={background}\r\n                    onChange={handleChange}\r\n                    checked={backgroundColor === background}\r\n                  />\r\n                  <span className={\"checkmark theme--\"+background}></span>\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangeBackground;\r\n","import \"./Todo.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddCard from \"../AddCard\";\r\nimport AddCardForm from \"../AddCard/AddCardForm\";\r\nimport AddList from \"../AddList\";\r\nimport Card from \"../Card\";\r\nimport ListHeader from \"../ListHeader\";\r\nimport ChangeBackground from \"../ChangeBackground/ChangeBackground\";\r\n\r\nfunction Todo() {\r\n  const [lists, setLists] = useState([]);\r\n  const [datas, setDatas] = useState([]);\r\n  const [isChangeBg, setIsChangeBg] = useState(false);\r\n  const [backgroundColor, setBackgroundColor] = useState(\"blue\");\r\n\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem('lists'))) {\r\n      setLists(JSON.parse(localStorage.getItem('lists')));\r\n      setDatas(JSON.parse(localStorage.getItem('datas')));\r\n      setBackgroundColor(localStorage.getItem('theme'));\r\n    }\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('lists', JSON.stringify(lists));\r\n    localStorage.setItem('datas', JSON.stringify(datas));\r\n  }, [lists, datas]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', backgroundColor);\r\n  }, [backgroundColor]);\r\n\r\n  function handleAddList(list) {\r\n    let idList = 0;\r\n    if (!lists.length) {\r\n      idList = 1;\r\n    } else {\r\n      idList = lists[lists.length - 1].id + 1;\r\n    }\r\n\r\n    let newList = {\r\n      id: idList,\r\n      title: list,\r\n      isAddOpen: false,\r\n    };\r\n    setLists([...lists, newList]);\r\n  }\r\n\r\n  function handleEditList(id, newList) {\r\n    const index = lists.findIndex((el) => el.id === id);\r\n    let tempArray = [...lists];\r\n    tempArray[index].title = newList;\r\n    setLists(tempArray);\r\n  }\r\n\r\n  function handleDeleteList(id) {\r\n    const index = lists.findIndex((el) => el.id === id);\r\n    let tempArray = [...lists];\r\n\r\n    handleDeleteAllData(tempArray[index].id);\r\n    tempArray.splice(index, 1);\r\n    setLists(tempArray);\r\n  }\r\n\r\n  const handleAddData = (input, listID) => {\r\n    let idData = 0;\r\n    if (!datas.length) {\r\n      idData = 1;\r\n    } else {\r\n      idData = datas[datas.length - 1].id + 1;\r\n    }\r\n\r\n    let newData = {\r\n      id: idData,\r\n      name: input,\r\n      listID: listID,\r\n    };\r\n\r\n    setDatas([...datas, newData]);\r\n  };\r\n\r\n  const handleEditData = (id, task) => {\r\n    const index = datas.findIndex((el) => el.id === id);\r\n    let tempArray = [...datas];\r\n    tempArray[index].name = task;\r\n    setDatas(tempArray);\r\n  };\r\n\r\n  const handleDeleteData = (index) => {\r\n    let tempArray = [...datas];\r\n    tempArray.splice(index, 1);\r\n    setDatas(tempArray);\r\n  };\r\n\r\n  function handleDeleteAllData(listID) {\r\n    let tempArray = [...datas];\r\n    const filtering = tempArray.filter((el) => el.listID === listID);\r\n    filtering.forEach(() =>\r\n      tempArray.splice(\r\n        tempArray.findIndex((el) => el.listID === listID),\r\n        1\r\n      )\r\n    );\r\n    setDatas(tempArray);\r\n  }\r\n\r\n  function handleOpenAddCard(id) {\r\n    const index = lists.findIndex((el) => el.id === id);\r\n    let tempArray = [...lists];\r\n    tempArray[index].isAddOpen = !tempArray[index].isAddOpen;\r\n    setLists(tempArray);\r\n  }\r\n\r\n  const handleMenuCard = (select, id) => {\r\n    const index = datas.findIndex((el) => el.id === id);\r\n    let tempArray = [...datas];\r\n    tempArray[index].listID = select;\r\n    setDatas(tempArray);\r\n\r\n    if (select === \"delete\") {\r\n      handleDeleteData(index);\r\n    }\r\n  };\r\n\r\n  function handleChangeBackground(event){\r\n    setBackgroundColor(event.target.value);\r\n  }\r\n\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  \r\n  function handleResize(){\r\n    window.innerWidth < 500 ? setIsMobile(true) : setIsMobile(false);\r\n  }\r\n\r\n  return (\r\n    <div className={`todo theme--`+backgroundColor}>\r\n      <div className=\"todo__header\">\r\n        <div className=\"todo__header__title\">\r\n          <div className=\"todo__header__name\">Todo List</div>\r\n          <span className=\"todo__header__credit\">\r\n            Made by{\" \"}\r\n            <a\r\n              className=\"credits__link\"\r\n              href=\"https://github.com/ilhamriz\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Ilhamriz\r\n            </a>\r\n          </span>\r\n        </div>\r\n        <button className=\"todo__header__menu\" onClick={()=>setIsChangeBg(!isChangeBg)}>\r\n          <svg className='todo__header__menu__icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M5 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm14 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-7 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n          {isMobile ? null : 'Change background' }\r\n        </button>\r\n      </div>\r\n      <div className=\"todo__canvas\">\r\n        {lists && lists.map((list, id) => (\r\n          <section key={id} className=\"todo__list\">\r\n            <h2 className=\"hidden\">{list.title}</h2>\r\n\r\n            <ListHeader\r\n              list={list}\r\n              handleEditList={handleEditList}\r\n              handleOpenAddCard={handleOpenAddCard}\r\n              handleDeleteAllData={handleDeleteAllData}\r\n              handleDeleteList={handleDeleteList}\r\n            />\r\n\r\n            <ul className=\"todo__card\">\r\n              {datas\r\n                .filter((el) => el.listID === lists[id].id)\r\n                .map((data) => (\r\n                  <Card\r\n                    key={data.id}\r\n                    data={data}\r\n                    lists={lists}\r\n                    handleMenuCard={(select) => handleMenuCard(select, data.id)}\r\n                    handleEditData={handleEditData}\r\n                  />\r\n                ))}\r\n              <AddCardForm\r\n                list={list}\r\n                handleAddData={handleAddData}\r\n                handleOpenAddCard={handleOpenAddCard}\r\n              />\r\n            </ul>\r\n\r\n            <AddCard\r\n              list={list}\r\n              datas={datas}\r\n              handleOpenAddCard={handleOpenAddCard}\r\n            />\r\n          </section>\r\n        ))}\r\n\r\n        <AddList lists={lists} handleAddList={handleAddList} />\r\n      </div>\r\n\r\n      <ChangeBackground\r\n        isChangeBg={isChangeBg}\r\n        setIsChangeBg={setIsChangeBg}\r\n        handleChange={handleChangeBackground}\r\n        backgroundColor={backgroundColor}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import './App.scss';\nimport Todo from './components/Todo'\n\nfunction App() {\n  return (\n    <div className=\"main__container\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}